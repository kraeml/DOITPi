# Makefile f√ºr Pandoc mit Markdown-Linting und dynamischen Zielen

# Makefile mit korrektem Docker-Aufruf
SHELL := /bin/bash -euo pipefail

# Standard-Pandoc-Optionen
TEMPLATE ?= eisvogel
HIGHLIGHT_STYLE ?= tango

%.pdf: %.md
	docker run --rm -v "$(CURDIR):/data" -u $$(id -u):$$(id -g) pandoc/extra $< -o $@ \
		--template=$(TEMPLATE) \
		--syntax-highlighting=$(HIGHLIGHT_STYLE)
	@echo "‚úÖ Generiert: $@"


# Markdown-Syntax pr√ºfen (z. B. `make lint-03_was`)
lint-%:
	@if [ ! -f "$*.md" ]; then \
		echo "‚ùå Fehler: Datei '$*.md' nicht gefunden."; \
		exit 1; \
	fi
	npx markdownlint-cli "$*.md" --fix  # Optional: Automatische Korrekturen
	@echo "‚úÖ Linting abgeschlossen f√ºr: $*.md"

# PDF l√∂schen (z. B. `make clean-03_was`)
clean-%:
	@if [ ! -f "$*.pdf" ]; then \
		echo "‚ÑπÔ∏è  Keine PDF-Datei '$*.pdf' zum L√∂schen gefunden."; \
	else \
		rm -f "$*.pdf"; \
		echo "üóëÔ∏è  Gel√∂scht: $*.pdf"; \
	fi

# Hilfetext
help:
	@echo "üìñ Makefile-Hilfe:"
	@echo "  make NAME.pdf      # PDF aus NAME.md erzeugen"
	@echo "  make lint-NAME     # Markdown-Syntax pr√ºfen (NAME.md)"
	@echo "  make clean-NAME    # NAME.pdf l√∂schen"
	@echo "  make help          # Diese Hilfe anzeigen"
	@echo "  make TEMPLATE=xy  # Benutzerdefiniertes Template nutzen"

.PHONY: lint-% clean-% help
